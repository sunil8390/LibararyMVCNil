@*@model LibararyMVCNil.DAL.Books*@
@*@model IEnumerable<LibararyMVCNil.ViewModel.BooksViewModel>*@

@model LibararyMVCNil.ViewModel.BooksViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>SearchBook1</title>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">

    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

    <style>

        body {
            background-color: #F5EEF8;
        }


        .main {
            display: flex;
            margin: 4rem;
        }

        .main1 {
            margin: 4rem;
        }

        .sub_main {
            padding-right: 40px;
        }



        h1 {
            background-color: #7FB3D5;
            padding: 10px;
            text-align: center;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            font-weight: 700;
        }

        #panel, #flip {
            padding: 5px;
            text-align: center;
            background-color: #e5eecc;
            border: solid 1px #c3c3c3;
        }

        #panel {
            padding: 50px;
            display: none;
        }



        .pagelist ul {
            list-style-type: none;
            display: flex;
        }

            .pagelist ul li {
                padding: 12px;
                margin: 7px;
                border: solid;
            }

        .pagelist input {
            background-color: white;
            color: black;
            border: 2px solid #01090e;
            padding: 10px;
            margin: 5px;
            margin-left: 1px;
            border-radius: 10px;
        }

            .pagelist input:hover {
                background-color: #0094ff;
                color: white;
            }


        #PageNo1 {
            background-color: #0a0303;
            color: #fff;
        }


        .btnstyle {
            background-color: #f00;
        }

        .paging-main {
            display: flex;
        }


        .content {
            position: absolute;
            top: 60%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 500px;
            height: 500px;
            text-align: center;
            background-color: #e8eae6;
            box-sizing: border-box;
            padding: 10px;
            z-index: 100;
            display: none;
            /*to hide popup initially*/
        }

        .close-btn {
            position: absolute;
            right: 20px;
            top: 15px;
            background-color: black;
            color: white;
            border-radius: 50%;
            padding: 4px;
        }
    </style>

</head>
<body>
    <div id="flip">Click Here to Read Laibrary Intructions and rules</div>
    <div id="panel">
        <p>
            All the personal belongings such as text books, notebooks, files, briefcases, umbrellas etc. should be kept at the property counter. However calculator and plain paper for note taking can be brought inside the library.
            Strict silence should be observed within the library. The member must show his/her identity card when demanded by the library staff. Keep Mobile Phone in silent mode.
        </p>
    </div>

    <div class="col-lg-12">
        <h1> Search library Books</h1>


    </div>

    <div class="col-lg-12">
        @using (Html.BeginForm("SearchBook1", "Books", FormMethod.Get, new { @id = "friendform" }))
        {


            <div class="main">
                <div class="sub_main">
                    <label><b>Book Name</b></label>

                    @Html.TextBoxFor(model => model.BookName, new { @class = "form-control" })

                </div>

                <div class="sub_main">
                    <label><b>Category Type</b></label>
                    @Html.DropDownListFor(model => model.CategoryId, new SelectList(Model.categorylist, "CategoryId", "CategoryName"), "Select Category", new { @class = "form-control" })

                </div>
                <div class="sub_main">
                    <label><b>Publihser Name</b></label>
                    @Html.DropDownListFor(model => model.PublisherId, new SelectList(Model.publisherlist, "PublisherId", "PublisherName"), "Select Publisher", new { @class = "form-control" })

                </div>


                <div class="sub_main">
                    @*<label><b>PageNumber</b></label>*@
                    @Html.HiddenFor(model => model.PageNumber, new { @class = "form-control" })

                </div>

                <div class="sub_main">
                    <label><b>RowsOfPage</b></label>

                    @Html.DropDownListFor(model => model.RowsOfPage, new SelectList(Model.PageRange), " Please Select Page Range", new { @class = "form-control" })
                </div>

                <div class="sub_main">
                    @Html.HiddenFor(model => model.TotalPages)




                </div>




                <div class="sub_main">

                    <input type="button" onclick="BtnClick()" value="Search" class="btn btn-outline-success" style="margin-top:24px" />

                </div>
                <div class="sub_main">

                    <input type="reset" value="Reset" class="btn btn-outline-info" style="margin-top:24px" />

                </div>

                <div class="sub_main">

                    @*<a href="~/Books/AddBook"> <input type="button" name="name" value="Add" class="btn btn-outline-success" style="margin-top:24px" /></a>*@

                </div>

            </div>




        }

    </div>

    <div class="col-lg-12">
        <button onclick="showmodal()" class=" btn btn-outline-success">Add Book</button>
    </div>


    <!-- div containing the popup -->
    <div class="content">
        <div onclick="Hide()" class="close-btn">
            ×
        </div>
        <h1>Add and Update Book</h1>


        @using (Html.BeginForm("AddBook", "Books", FormMethod.Post, new { @id = "popUpForm" }))
        {


            <div class="main1">

                <div class="sub_main">

                    @Html.HiddenFor(m => m.BookId, new { @id = "InsertBookId" })

                </div>


                <div class="sub_main">
                    <label><b>Book Name</b></label>

                    @Html.TextBoxFor(model => model.BookName, new { @class = "form-control", @id = "InsertBookName" })

                </div>

                <div class="sub_main">
                    <label><b>Category Type</b></label>
                    @Html.DropDownListFor(model => model.CategoryId, new SelectList(Model.categorylist, "CategoryId", "CategoryName"), "Select Category", new { @class = "form-control", @id = "InsertCategoryId" })

                </div>
                <div class="sub_main">
                    <label><b>Publihser Name</b></label>
                    @Html.DropDownListFor(model => model.PublisherId, new SelectList(Model.publisherlist, "PublisherId", "PublisherName"), "Select Publisher", new { @class = "form-control", @id = "InsertPublisherId" })

                </div>

                <div class="sub_main">
                    <label><b>Quantity</b></label>

                    @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control", @id = "InsertQuantity" })

                </div>

                <div class="sub_main">
                    <label><b>Is active</b></label>

                    @Html.CheckBoxFor(model => model.IsActive, new { @id = "InsertIsActive" })

                </div>

                <div class="sub_main">

                    <input type="button" id="button_1" value="Add" class="btn btn-outline-success" style="margin-top:24px" />
                    <input type="button" value="Cancle" class="btn btn-outline-info" style="margin-top:24px" />

                    <a href="~/Books/SearchBook1">Back to Search Book</a>

                </div>

            </div>


        }
    </div>

    @*end add book popup*@


    @*delete book Popup*@

    @*<button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">Delete Book</button>*@

    

        <!-- Trigger the modal with a button -->


        <!-- Modal -->
        <div class="modal fade" id="myModal" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Confirm Delete Book</h4>
                    </div>
                    <div class="modal-body">

                        @using (Html.BeginForm("DeleteBook", "Books", FormMethod.Post))
                        {

                            <div class="form-group">
                                <span>
                                    Are you sure you want to delete?
                                </span>
                                <strong id="deletedValueName">
                                </strong>
                            </div>

                            <div class="form-group">
                                <label for="BookId" hidden>BookId</label>
                                @Html.HiddenFor(m => m.BookId, new { @class = "form-control", @id = "DeleteBookId" })
                            </div>



                            <div class="modal-footer">
                                <button type="button" name="Submit" id="btnconfirmdelete" value="submit" class="btn btn-info">Confirm</button>
                                <button type="button" id="btnDeleteBookCancel" class="btn btn-secondary" data-dismiss="modal">Cancel</button>

                            </div>

                        }
                    </div>
                </div>

            </div>
        </div>




    @*end delete book popup*@





    <div id="partial_table"></div> @*partial table*@

    <div id="partialpaging"> </div> @*partial paging btn*@


    <div id="partiallable"> </div> @*partial lable*@













    <script>

        $(document).ready(function () {

            $("#flip").click(function () {
                $("#panel").slideDown("slow");

            });

            $("#panel").click(function () {

                $("#panel").slideUp("slow");
            });


            $("#RowsOfPage").change(function () {                                    //on change event to row of pages
                var selectDropdown = $("#RowsOfPage").val();
                BtnClick(selectDropdown);
            });




            BtnClick();
        });


    $("#button_1").click(function () {                                       //popup btn click submit data

        var valdata = $("#popUpForm").serialize();

                $.ajax
                    ({
                        url: "@(Url.Action("AddBook", "Books"))",
                        method: "POST",
                         data: valdata,
                        success: function (data)
                        {
                            BtnClick();

                            $('.content').hide();
                            alert("Book add Sucessfuly");
                         },

                    });
            });



        // Function to show and hide the popup
        //function togglePopup() {
        //    $(".content").toggle();
        //}


        function showmodal() {
            $(".content").show();
        }


        function Hide() {
            $(".content").hide();
            }


        //delete










        // edit option popup

        $(document).on("click", "#EditBook", function () {                  //paging btn

            var Id = $(this).data('id');

            $.ajax({

                url: "/Books/AddBook",
                type: "GET",
                data: { Id: Id },
                success: function (data) {
                    //console.log(data);



                    debugger;

                    $("#InsertBookId").val(data.BookId);
                    $("#InsertBookName").val(data.BookName);
                    $("#InsertQuantity").val(data.Quantity);
                    $("#InsertCategoryId").val(data.CategoryId);
                    $("#InsertPublisherId").val(data.PublisherId);

                    //$("#InsertIsActive").val(data.IsActive);


                    if (data.IsActive = true) {
                        var element = $("#InsertIsActive").val(data.IsActive);
                        element.prop('checked', true);

                    } else {
                        var element = $("#InsertIsActive").val(data.IsActive);
                        element.prop('checked', false);

                    }






                    //$('.content').show();
                    //alert(data);

                    $('.content').show();


                   /* BtnClick();*/

                }


            })


        })


        // edit option popup end



       // Delete Book
        var deleteConfirm = function (id, val)

        {
            //alert(val);
            //console.log(val)
            debugger;
            $('#DeleteBookId').val(id);
            $('#deletedValueName').text(val);

            $('#myModal').modal('show');


        };

        $(document).on("click", "#btnconfirmdelete", function () {

            debugger;
            var Id = $("#DeleteBookId").val();
            $.ajax({
                url: "/Books/DeleteBook",
                type: "POST",
                data: { id: Id },
                success: function (data) {
                        
                   
                    $("#myModal").modal('hide');
                    BtnClick();
                }
            })
        });

        //end delete book




        $(document).on("click", "#next", function () {                     //next page btn



            //if (parseInt($("#PageNumber").val()) < parseInt($("#TotalPages").val()) )  //parseInt($("#TotalPages").val())
            //{

            var increment = $("#PageNumber").val();

            $("#PageNumber").val(++increment);
            BtnClick();
            //}
        });
        $(document).on("click", "#previews", function () {                 //previews page btn

            if ($("#PageNumber").val() > 1) {
                var decrement = $("#PageNumber").val();
                $("#PageNumber").val(decrement - 1);
                BtnClick();
            }
        });




        function BtnClick() {
            /* debugger;*/


            var valdata = $("#friendform").serialize();



            //console.log(valdata);

            $.ajax
                ({
                    url: "/Books/SearchBook1", //get call on controller
                    method: "POST",
                    /* dataType: 'json',*/
                    data: valdata,
                    success: function (data) {
                        $('#partial_table').html(data);


                        //console.log(data);
                        //data = JSON.parse(data);


                        //Display table
                        //var strtable = "<table>"

                        //$.each(data.booklist, function (i, v1) {
                        //    strtable +=
                        //        "<tr><td>" + v1.BookId + "</td><td>" + v1.BookName + "</td><td>" + v1.CategoryName + "</td><td>" + v1.PublisherName + "</td><td>" + v1.Quantity + "</td></tr>";


                        //});
                        //strtable += "</table>";


                        //$('#listdiv').html(strtable);







                        //Implement Paging using list tag
                        //var strPage = "<ul>"
                        //for (var i = 1; i <= data.TotalPages; i++) {
                        //    strPage += "<li><a href='' id='PageNo' >" + i + "</a></li>";

                        //}
                        //strPage += "</ul>"
                        //$('#pagediv').html(strPage);



                        //Implement Paging using button

                        //var CurrentPage = data.PageNumber;
                        //var fristpage = data.PageNumber;
                        //var strPage = ""

                        //$("#TotalPages").val(data.TotalPages);          //pass value to total page hidden fileld in form


                        //page
                        //for (var i = 1; i <= data.TotalPages; i++)
                        //{
                        //    debugger;
                        //    if (i == CurrentPage) {
                        //        strPage += "<input type='button' id='PageNo1'  value='"  + CurrentPage + "' />" ;
                        //    }

                        //    else
                        //    {
                        //        strPage += "<input type='button' id='PageNo'  value='" + i + "'/>";
                        //    }
                        //}

                        //next page
                        //var nextpage = ""


                        //if (CurrentPage != data.TotalPages)
                        //{
                        //    nextpage += "<input type='button' id='next'  value='>>'/>"
                        //}



                        //previews page
                        //var previewspage = ""
                        //if (fristpage != 1)
                        //{
                        //     previewspage += "<input type='button' id='previews'  value='<<'/>"
                        //}



                        //$('#pagediv').html(strPage);
                        //$('#pagenext').html(nextpage);
                        //$('#pagepreviews').html(previewspage);


                    },


                    //error: function (err) {
                    //    alert("Somthing went Wrong... ");
                    //}
                });


        }



    </script>
</body>
</html>