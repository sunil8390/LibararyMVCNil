
@*@model LibararyMVCNil.DAL.Books*@
@*@model IEnumerable<LibararyMVCNil.ViewModel.BooksViewModel>*@

    @model LibararyMVCNil.ViewModel.BooksViewModel

    @{
        Layout = null;
    }

    <!DOCTYPE html>

    <html>
    <head>
        <meta name="viewport" content="width=device-width" />
        <title>SearchBook1</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <style>
            .main {
                display: flex;
                margin: 4rem;
            }


            .sub_main {
                padding-right: 40px;
            }

            h1 {
                background-color: #F5F5DC;
                padding: 10px;
                text-align: center;
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                font-weight: 600;
            }
        </style>

    </head>
    <body>

        <div class="col-lg-12"><h1> Search library Books</h1> </div>


        @using (Html.BeginForm("SearchBook1", "Books", FormMethod.Post))
        {

            <form>
                <div class="main">
                    <div class="sub_main">
                        <label>Book Name</label>
                        @Html.TextBoxFor(model => model.BookName, new { @class = "form-control" })

                    </div>

                    <div class="sub_main">
                        <label>Category Type</label>
                        @Html.DropDownListFor(model => model.CategoryId, new SelectList(Model.categorylist, "CategoryId", "CategoryName"), "Select Category", new { @class = "form-control" })

                    </div>
                    <div class="sub_main">
                        <label>Publihser Name</label>
                        @Html.DropDownListFor(model => model.PublisherId, new SelectList(Model.publisherlist, "PublisherId", "PublisherName"), "Select Publisher", new { @class = "form-control" })

                    </div>


                    <div class="sub_main">
                        <label>PageNumber</label>
                        @Html.TextBoxFor(model => model.PageNumber, new { @class = "form-control" })

                    </div>
                    <div class="sub_main">
                        <label>RowsOfPage</label>
                        @*@Html.TextBoxFor(model => model.RowsOfPage, new { @class = "form-control" })*@
                        @*@Html.DropDownListFor(model => model.RowsOfPage, new SelectList(Model.),  new { @class = "form-control" })*@

                        @*@Html.DropDownList("Status", new List<SelectListItem>

                        {
                           new SelectListItem{ Text="3", Value = "3" },
                           new SelectListItem{ Text="5", Value = "5" },
                           new SelectListItem{ Text="10", Value = "10" }
                        })*@


                        @Html.DropDownListFor(model => model.RowsOfPage, new SelectList(Model.PageRange), " Please Select Page Range", new { @class = "form-control" })
                    </div>



                    <div class="sub_main">

                        <input type="button" onclick="BtnClick()" name="name" value="Search" class="btn btn-outline-success" style="margin-top:24px" />
                    </div>
                    <div class="sub_main">

                        <input type="reset" value="Reset" class="btn btn-outline-info" style="margin-top:24px" />

                    </div>
                </div>
            </form>

        }

<div id="listdiv"></div>

    @*<input type="button" onclick="BtnClick()" name="name" value="click me " />*@



    <script>
        function BtnClick() {
            $.ajax({
                url: "/Books/get_data",
                method: "GET",
                success: function (data) {  
                /*     console.log(data);*/

                    data = JSON.parse(data);
                    console.log(data);

                    var strtable = "<table>";
                    //for (i = 0; i < data.length; i++) {
                    //    strtable = strtable + "<tr><td>"
                    $.each(data, function (i, v1) {
                        strtable += "<tr><td>" + v1.BookId + "</td><td>" + v1.BookName + "</td><td>" + v1.CategoryName + "</td><td>" + v1.PublisherName + "</td></tr>";
                    });

                         strtable += "</table>";

                    $('#listdiv').html(strtable);

                    //$("#bkid").text(data.BookId);
                    //$("#bkname").text(data.BookName);

                },
                error: function (err) {
                    console.log(err);
                }
            })
        }

    </script>










            @*using jqury ajax 1*@
            @*<div>
                <table id="tbldata" class="tableData">
                    <tr>BookId</tr>
                    <tr>Book Name</tr>
                    <tr>Category Name</tr>
                    <tr>Publisher Name</tr>
                </table>
            </div>

        <script>
            $(function () {
                $.get("get_data", {}, function (data) {

                var row;
                    $.each(data, function (i, v1) {
                    row + "<tr><td>" + v1.BookId + "</td><td>" + v1.BookName + "</td><td>" + v1.CategoryName + "</td><td>" + v1.PublisherName + "</td></tr>"
                    }
            });
                $("#tbldata").append(row);
        })

        </script>*@






            @*show data using simple table*@ 
            @*<div class="container-fluid">
                <table class="table table-hover">
                    <tr>
                        <th>BookId</th>
                        <th>Book Name</th>
                        <th>Category Name</th>
                        <th>Publisher Name</th>
                    </tr>

                    @foreach (var a in Model.booklist)
                    {

                        <tr>
                            <td>@Html.DisplayFor(modelitem => a.BookId) </td>

                            <td>@Html.DisplayFor(modelitem => a.BookName) </td>
                            <td>@Html.DisplayFor(modelitem => a.CategoryName) </td>
                            <td>@Html.DisplayFor(modelitem => a.PublisherName) </td>

                        </tr>


                    }
                </table>

            </div>*@
      


        @*paging*@ 

        @*@for (int i = 1; i <= Model.TotalPages; i++)

        {
            <ul>
                <li>@Html.ActionLink(@i.ToString(), "SearchBook1", "Books", new { page = @i } )</li>
            </ul>


        }*@

        @*paging*@ 
    @*<div class="container-fluid">

        @for (int a = 1; a < Convert.ToInt32(Model.TotalPages) + 1; a++)
        {
            <a href="@Url.Action("SearchBook1", "Books",new { pager=a   })">@a.ToString()</a>


        }


    </div>*@
       
          


        

    </body>
</html>
